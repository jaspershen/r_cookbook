[
["index.html", "R cookbook from Xiaotao Shen Chapter 1 前言", " R cookbook from Xiaotao Shen Xiaotao Shen 2020-03-14 Chapter 1 前言 陆陆续续看了很多书,希望系统的把自己对R语言学习到的内容记录下来. "],
["markdown.html", "Chapter 2 Markdown 2.1 Markdown语法 2.2 标题 (Header) 2.3 图片 (Image) 2.4 链接 (Links) 2.5 强调 (Emphasize) 2.6 引用(Blockquotes) 2.7 代码块 (Code chunks) 2.8 水平线 (Horizontal rule) 2.9 列表 (List) 2.10 表格 (Tables) 2.11 段落 2.12 插入icon 2.13 数学公式 (Equations) 2.14 视频 (Video)和音乐 (music) 2.15 Markdown编辑器", " Chapter 2 Markdown 首先从Markdown的基础语法开始. 2.1 Markdown语法 markdown语法一般是使用符号转变为特殊格式.这样,看起来markdown文件都是plain text(纯文本),但是渲染之后,就可以得到特殊格式的文件了. 很多语法没有必要记住,只需要记住大概常用的几个就好,遇到不会的,直接google就可以. 2.2 标题 (Header) Markdown一共支持六级标题. 语法: # 一级标题 ## 二级标题 ### 三级标题 #### 四级标题 ##### 五级标题 ###### 六级标题 2.3 图片 (Image) 注意#和文字之间一定要空格. 插入图片的基本语法: ![](图片链接或者本地位置) 比如使用下面语句: ![](https://www.shenxt.info/files/wechat_QR.jpg) 这种插入图片的办法,不能设置图片的大小,如果想要设置图片大小,可以使用HTML语法(img标签)插入,markdown是支持HTML语法的. &lt;img src = &#39;https://www.shenxt.info/files/wechat_QR.jpg&#39; alt = &#39;shenxiaotao&#39; /&gt; HTML img标签还有很多的其他功能,比如对齐等. 常用的一些参数: 属性 描述 alt 图像替代文本 src 图片链接或者本地地址 height 图片高度,单位可以是%或者pixel weight 图片宽度,单位可以是%或者pixel weight 图片宽度,单位可以是%或者pixel align 图片位置,只支持left或者right 图片默认是靠左对齐.如果想要居中,很奇怪不能使用&lt;img&gt;标签,需要使用&lt;p&gt;标签.也就是段落. &lt;p align = &quot;center&quot;&gt; &lt;img src = &#39;https://www.shenxt.info/files/wechat_QR.jpg&#39; alt = &#39;shenxiaotao&#39; height = 50% width = 50% /&gt; &lt;/p&gt; 2.4 链接 (Links) 直接写url 语法: https://www.shenxt.info/ https://www.shenxt.info/ 将网址超链接给某段文字 语法: 想要访问我的网站,请点击[这里](https://www.shenxt.info/) 想要访问我的网站,请点击这里 HTML插入链接 如果我们想要更多的链接功能,比如点击链接打开新的窗口.这时候可以使用&lt;a&gt;标签. 语法: &lt;a href=&quot;url&quot;&gt;Link text&lt;/a&gt; 常用属性含义如下: 属性 描述 href 链接网址url target 在何处打开链接, _blank, _parent, _self, _top 比如我们插入一个网址,点击之后在新的网页打开. 想要访问我的网站,请点击&lt;a href=&quot;https://www.shenxt.info/&quot; target = &#39;_blank&#39;&gt;这里&lt;/a&gt;. 想要访问我的网站,请点击这里. 将超链接绑定在图片上 使用HTML语法,可以将超链接绑定在一个图片上. 比如: &lt;a href=&quot;https://www.shenxt.info/&quot; target = &#39;_blank&#39;&gt;&lt;img src = &#39;https://www.shenxt.info/files/wechat_QR.jpg&#39; alt = &#39;shenxiaotao&#39; height = 50% width = 50% /&gt;&lt;/a&gt; 点击下图查看我的网站: 2.5 强调 (Emphasize) 强调包括斜体,高亮,加粗等等. 斜体 语法如下: *这是斜体* _这也是斜体_ 这是斜体 这也是斜体 加粗 语法如下: **这是粗体** __这也是粗体__ 这是粗体 这也是粗体 加粗和斜体 语法如下: ***这是粗体也是斜体*** ___这是粗体也是斜体___ 这是粗体也是斜体 这是粗体也是斜体 删除线 语法如下: ~~删除这句话~~ 删除这句话 其他可以使用HTML语法实现的强调 Markdown只有以上几种强调的用法,使用HTML可以实现一些其他的内容.比如字体颜色等. 字体颜色可以使用&lt;font&gt;标签实现. 比如我们想用红色字体. &lt;font color=&quot;red&quot;&gt;这段话使用红色字体.&lt;/font&gt; 这段话使用红色字体. &lt;font&gt;标签常用属性: 属性 描述 color 颜色 face 字体 size 字体大小 2.6 引用(Blockquotes) 语法: &gt; 这是一句引用 这是一句引用 语法: &gt; 这是一段引用 &gt; 这是一段引用 这是一段引用 这是一段引用 2.7 代码块 (Code chunks) 单独代码 语法: ``` library(ggplot2) library(tidyverse) mtcars %&gt;% ggplot(aes(x = gear, cyl)) + geom_point() + theme_bw() ``` 最后渲染结果为: library(ggplot2) library(tidyverse) mtcars %&gt;% ggplot(aes(x = gear, cyl)) + geom_point() + theme_bw() 如果是使用Rmarkdown,还可以直接让代码运行出现结果. 语法: ```{r, eval = TRUE} library(ggplot2) library(tidyverse) mtcars %&gt;% ggplot(aes(x = gear, cyl)) + geom_point() + theme_bw() ``` library(ggplot2) library(tidyverse) mtcars %&gt;% ggplot(aes(x = gear, cyl)) + geom_point() + theme_bw() Rmarkdown中代码块中有很多内容可以设置. 行内代码 行内代码可以使用``(中间为内容或者代码). 比如: `行内代码`可以用来强调某个部分. 行内代码可以用来强调某个部分. 当然,在rmakdown中,代码块是可以运行的,所以行内代码也可以运行得到结果. 比如: There were 50 cars studied There were 50 cars studied 2.8 水平线 (Horizontal rule) 语法: 这是一条水平线. *** 这也是一条水平线. --- 这是一条水平线. 这也是一条水平线. 2.9 列表 (List) 有序列表 (Ordered list) 直接使用数字即可 语法: 1. Item 1 2. Item 2 3. Item 3 Item 1 Item 2 Item 3 无序列表 (Unordered list) 无需列表可以使用*或者-来创建. 语法: * Item 1 * Item 2 * Item 2.1 * Item 2.2 * Item 3 Item 1 Item 2 Item 2.1 Item 2.2 Item 3 语法: - Item 1 - Item 2 - Item 2.1 - Item 2.2 - Item 3 Item 1 Item 2 Item 2.1 Item 2.2 Item 3 任务列表 (Task list) 有的markdown编辑器是支持任务列表的,比如github,但是有些也不支持.比如rmakdown就是不支持的(本书就是用rmakrdown写的). 语法: - [x] Write the press release - [ ] Update the website - [ ] Contact the media [x] Write the press release [ ] Update the website [ ] Contact the media 2.10 表格 (Tables) 原生态的markdown表格语法非常简单. 语法: | First name | Last name | Sex | | ------------- |-------------| -----| | Xiaotao |Shen | Male | | Chuchu | Wang | Female | First name Last name Sex Xiaotao Shen Male Chuchu Wang Female Rmarkdown可以使用函数来插入表格. DT包 语法: ```{r, eval=TRUE} library(DT) DT::datatable( head(iris, 10), fillContainer = TRUE, options = list(pageLength = 4) ) ``` library(DT) DT::datatable( head(iris, 10), fillContainer = TRUE, options = list(pageLength = 4) ) knitr包 语法: ```{r, eval=TRUE} knitr::kable(head(iris), format = &#39;html&#39;) ``` knitr::kable(head(iris), format = &#39;html&#39;) Sepal.Length Sepal.Width Petal.Length Petal.Width Species 5.1 3.5 1.4 0.2 setosa 4.9 3.0 1.4 0.2 setosa 4.7 3.2 1.3 0.2 setosa 4.6 3.1 1.5 0.2 setosa 5.0 3.6 1.4 0.2 setosa 5.4 3.9 1.7 0.4 setosa 2.11 段落 markdown中对于段落的控制比较上,如果需要对段落进行修饰,比如对齐,段间距等等,需要使用HTML&lt;p&gt;标签进行设置. 对齐 对齐是&lt;p&gt;标签中的align属性. 左对齐 &lt;p align = &quot;left&quot;&gt; Markdown is a lightweight markup language with plain-text-formatting syntax. Its design allows it to be converted to many output formats, but the original tool by the same name only supports HTML.[9] Markdown is often used to format readme files, for writing messages in online discussion forums, and to create rich text using a plain text editor. &lt;/p&gt; Markdown is a lightweight markup language with plain-text-formatting syntax. Its design allows it to be converted to many output formats, but the original tool by the same name only supports HTML.[9] Markdown is often used to format readme files, for writing messages in online discussion forums, and to create rich text using a plain text editor. 右对齐 &lt;p align = &quot;right&quot;&gt; Markdown is a lightweight markup language with plain-text-formatting syntax. Its design allows it to be converted to many output formats, but the original tool by the same name only supports HTML.[9] Markdown is often used to format readme files, for writing messages in online discussion forums, and to create rich text using a plain text editor. &lt;/p&gt; Markdown is a lightweight markup language with plain-text-formatting syntax. Its design allows it to be converted to many output formats, but the original tool by the same name only supports HTML.[9] Markdown is often used to format readme files, for writing messages in online discussion forums, and to create rich text using a plain text editor. 居中对齐 &lt;p align = &quot;center&quot;&gt; Markdown is a lightweight markup language with plain-text-formatting syntax. Its design allows it to be converted to many output formats, but the original tool by the same name only supports HTML.[9] Markdown is often used to format readme files, for writing messages in online discussion forums, and to create rich text using a plain text editor. &lt;/p&gt; Markdown is a lightweight markup language with plain-text-formatting syntax. Its design allows it to be converted to many output formats, but the original tool by the same name only supports HTML.[9] Markdown is often used to format readme files, for writing messages in online discussion forums, and to create rich text using a plain text editor. 两端对齐 &lt;p align = &quot;justify&quot;&gt; Markdown is a lightweight markup language with plain-text-formatting syntax. Its design allows it to be converted to many output formats, but the original tool by the same name only supports HTML.[9] Markdown is often used to format readme files, for writing messages in online discussion forums, and to create rich text using a plain text editor. &lt;/p&gt; Markdown is a lightweight markup language with plain-text-formatting syntax. Its design allows it to be converted to many output formats, but the original tool by the same name only supports HTML.[9] Markdown is often used to format readme files, for writing messages in online discussion forums, and to create rich text using a plain text editor. 行间距 使用&lt;p&gt;标签的style属性进行设置. 将line-height设置为300%相当于是三倍行距. &lt;p align = &quot;justify&quot; style=&quot;line-height:300%&quot;&gt; Markdown is a lightweight markup language with plain-text-formatting syntax. Its design allows it to be converted to many output formats, but the original tool by the same name only supports HTML.[9] Markdown is often used to format readme files, for writing messages in online discussion forums, and to create rich text using a plain text editor. &lt;/p&gt; Markdown is a lightweight markup language with plain-text-formatting syntax. Its design allows it to be converted to many output formats, but the original tool by the same name only supports HTML.[9] Markdown is often used to format readme files, for writing messages in online discussion forums, and to create rich text using a plain text editor. 2.12 插入icon 可以插入符号工具包Font Awesome.一般的markdown编辑器都已经支持直接使用HTML插入icon. 比如插入微信图标: &lt;i class=&quot;fa fa-weixin&quot;&gt;&lt;/i&gt; 如果不支持,可以在markdown的最底端插入下面的代码: &lt;head&gt; &lt;script defer src=&quot;https://use.fontawesome.com/releases/v5.0.13/js/all.js&quot;&gt;&lt;/script&gt; &lt;script defer src=&quot;https://use.fontawesome.com/releases/v5.0.13/js/v4-shims.js&quot;&gt;&lt;/script&gt; &lt;/head&gt; &lt;link rel=&quot;stylesheet&quot; href=&quot;https://use.fontawesome.com/releases/v5.0.13/css/all.css&quot;&gt; 当然也可以使用HTML的&lt;a&gt;标签让icon绑定一个超链接. &lt;a href=&quot;https://www.shenxt.info/files/wechat_QR.jpg&quot;&gt;&lt;i class=&quot;fa fa-weixin&quot;&gt;&lt;/i&gt;&lt;/a&gt; 2.13 数学公式 (Equations) Markdown可以方便插入数学公式. 2.13.1 行内和行外 如果是将公式插入到行内,使用$公式$. 如果是将公式单独出来,使用$$公式$$. 2.13.2 上标和下标 上标^ 比如:$x^4$:\\(x^4\\). 下标_ 比如:$x_2$:\\(x_2\\) 2.13.3 占位符 空格 单个空格:\\quad. 比如:$x\\quady$: \\(x \\quad y\\) 两个个空格:\\qquad. 比如:$x\\qquady$: \\(x \\qquad y\\) 大空格 符号:\\ 比如:$x\\y$:\\(x\\ y\\). 中空格 符号:\\: 比如:$x\\:y$:\\(x\\: y\\). 小空格 符号:\\, 比如:$x\\,y$:\\(x\\, y\\). 紧贴 符号:\\! 比如:$x\\!y$:\\(x\\! y\\). 2.13.4 四则运算 平均数运算 符号：\\overline{算式}，如：$\\overline{xyz}$:\\(\\overline{xyz}\\) 开二次方运算，符号：\\sqrt，如：$\\sqrt x$:\\(\\sqrt x\\) 开方运算，符号：\\sqrt[开方数]{被开方数}，如：$\\sqrt[3]{x+y}$:\\(\\sqrt[3]{x+y}\\) 对数运算，符号：\\log，如：$\\log(x)$:\\(\\log(x)\\). 极限运算，符号：\\lim，如：$\\lim^{x \\to \\infty}_{y \\to 0}{\\frac{x}{y}}$:\\(\\lim^{x \\to \\infty}_{y \\to 0}{\\frac{x}{y}}\\) 极限运算，符号：\\displaystyle \\lim，如：$\\displaystyle \\lim^{x \\to \\infty}_{y \\to 0}{\\frac{x}{y}}$:\\(\\displaystyle \\lim^{x \\to \\infty}_{y \\to 0}{\\frac{x}{y}}\\) 求和运算，符号：\\sum，如：$\\sum^{x \\to \\infty}_{y \\to 0}{\\frac{x}{y}}$:\\(\\sum^{x \\to \\infty}_{y \\to 0}{\\frac{x}{y}}\\) 求和运算，符号：\\displaystyle \\sum，如：$\\displaystyle \\sum^{x \\to \\infty}_{y \\to 0}{\\frac{x}{y}}$:\\(\\displaystyle \\sum^{x \\to \\infty}_{y \\to 0}{\\frac{x}{y}}\\) 积分运算，符号：\\int，如：$\\int^{\\infty}_{0}{xdx}$:\\(\\int^{\\infty}_{0}{xdx}\\) 积分运算，符号：\\displaystyle \\int，如：$\\displaystyle \\int^{\\infty}_{0}{xdx}$:\\(\\displaystyle \\int^{\\infty}_{0}{xdx}\\) 微分运算，符号：\\partial，如：$\\frac{\\partial x}{\\partial y}$:\\(\\frac{\\partial x}{\\partial y}\\) 矩阵表示，符号：\\begin{matrix} \\end{matrix}，如：$\\left[ \\begin{matrix} 1 &amp;2 &amp;\\cdots &amp;4\\5 &amp;6 &amp;\\cdots &amp;8\\\\vdots &amp;\\vdots &amp;\\ddots &amp;\\vdots\\13 &amp;14 &amp;\\cdots &amp;16\\end{matrix} \\right]$\\(\\left[ \\begin{matrix} 1 &amp;2 &amp;\\cdots &amp;4\\5 &amp;6 &amp;\\cdots &amp;8\\\\vdots &amp;\\vdots &amp;\\ddots &amp;\\vdots\\13 &amp;14 &amp;\\cdots &amp;16\\end{matrix} \\right]\\) 2.13.5 集合运算 属于运算，符号：\\in，如：$x \\in y$\\(x \\in y\\) 不属于运算，符号：\\notin，如：$x \\notin y$:\\(x \\notin y\\) 不属于运算，符号：\\not\\in，如：$x \\not\\in y$\\(x \\not\\in y\\) 子集运算，符号：\\subset，如：$x \\subset y$\\(x \\subset y\\) 子集运算，符号：\\supset，如：$x \\supset y$\\(x \\supset y\\) 真子集运算，符号：\\subseteq，如：$x \\subseteq y$\\(x \\subseteq y\\) 非真子集运算，符号：\\subsetneq，如：$x \\subsetneq y$\\(x \\subsetneq y\\) 真子集运算，符号：\\supseteq，如：$x \\supseteq y$\\(x \\supseteq y\\) 非真子集运算，符号：\\supsetneq，如：$x \\supsetneq y$\\(x \\supsetneq y\\) 非子集运算，符号：\\not\\subset，如：$x \\not\\subset y$\\(x \\not\\subset y\\) 非子集运算，符号：\\not\\supset，如：$x \\not\\supset y$\\(x \\not\\supset y\\) 并集运算，符号：\\cup，如：$x \\cup y$\\(x \\cup y\\) 交集运算，符号：\\cap，如：$x \\cap y$\\(x \\cap y\\) 差集运算，符号：\\setminus，如：$x \\setminus y$\\(x \\setminus y\\) 同或运算，符号：\\bigodot，如：$x \\bigodot y$\\(x \\bigodot y\\) 同与运算，符号：\\bigotimes，如：$x \\bigotimes y$\\(x \\bigotimes y\\) 实数集合，符号：\\mathbb{R}，如：$\\mathbb{R}$ \\(\\mathbb{R}\\) 自然数集合，符号：\\mathbb{Z}，如：$\\mathbb{Z}$ \\(\\mathbb{Z}\\) 空集，符号：\\emptyset，如：$\\emptyset$\\(\\emptyset\\) 2.13.6 数学符号 无穷，符号：\\infty，如：$\\infty$\\(\\infty\\) 虚数，符号：\\imath，如：$\\imath$\\(\\imath\\) 虚数，符号：\\jmath，如：$\\jmath$\\(\\jmath\\) 数学符号，符号\\hat{a}，如：$\\hat{a}$\\(\\hat{a}\\) 数学符号，符号\\check{a}，如：$\\check{a}$\\(\\check{a}\\) 数学符号，符号\\breve{a}，如：$\\breve{a}$\\(\\breve{a}\\) 数学符号，符号\\tilde{a}，如：$\\tilde{a}$\\(\\tilde{a}\\) 数学符号，符号\\bar{a}，如：$\\bar{a}$\\(\\bar{a}\\) 矢量符号，符号\\vec{a}，如：$\\vec{a}$\\(\\vec{a}\\) 数学符号，符号\\acute{a}，如：$\\acute{a}$\\(\\acute{a}\\) 数学符号，符号\\grave{a}，如：$\\grave{a}$\\(\\grave{a}\\) 数学符号，符号\\mathring{a}，如：$\\mathring{a}$\\(\\mathring{a}\\) 一阶导数符号，符号\\dot{a}，如：$\\dot{a}$\\(\\dot{a}\\) 二阶导数符号，符号\\ddot{a}，如：$\\ddot{a}$\\(\\ddot{a}\\) 上箭头，符号：\\uparrow，如：$\\uparrow$\\(\\uparrow\\) 上箭头，符号：\\Uparrow，如：$\\Uparrow$\\(\\Uparrow\\) 下箭头，符号：\\downarrow，如：$\\downarrow$\\(\\downarrow\\) 下箭头，符号：\\Downarrow，如：$\\Downarrow$\\(\\Downarrow\\) 左箭头，符号：\\leftarrow，如：$\\leftarrow$\\(\\leftarrow\\) 左箭头，符号：\\Leftarrow，如：$\\Leftarrow$\\(\\Leftarrow\\) 右箭头，符号：\\rightarrow，如：$\\rightarrow$\\(\\rightarrow\\) 右箭头，符号：\\Rightarrow，如：$\\Rightarrow$\\(\\Rightarrow\\) 底端对齐的省略号，符号：\\ldots，如：$1,2,\\ldots,n$\\(1,2,\\ldots,n\\) 中线对齐的省略号，符号：\\cdots，如：$x_1^2 + x_2^2 + \\cdots + x_n^2$\\(x_1^2 + x_2^2 + \\cdots + x_n^2\\) 竖直对齐的省略号，符号：\\vdots，如：$\\vdots$\\(\\vdots\\) 斜对齐的省略号，符号：\\ddots，如：$\\ddots$\\(\\ddots\\) 2.13.7 希腊字母 字母 符合 字母 符号 \\(A\\) $A$ \\(\\alpha\\) $\\alpha$ \\(B\\) $B$ \\(\\beta\\) $\\beta$ \\(\\Gamma\\) $\\Gamma$ \\(\\gamma\\) $\\gamma$ \\(\\Delta\\) $\\Delta$ \\(\\delta\\) $\\delta$ \\(E\\) $E$ \\(\\epsilon\\) $\\epsilon$ \\(Z\\) $Z$ \\(\\zeta\\) $\\zeta$ \\(H\\) $H$ \\(\\eta\\) $\\eta$ \\(\\Theta\\) $Theta$ \\(\\theta\\) $\\theta$ \\(I\\) $I$ \\(\\iota\\) $\\iota$ \\(K\\) $K$ \\(\\kappa\\) $\\kappa$ \\(\\Lambda\\) $\\Lambda$ \\(\\lambda\\) $\\lambda$ \\(M\\) $M$ \\(\\mu\\) $\\mu$ \\(N\\) $N$ \\(\\nu\\) $\\nu$ \\(\\Xi\\) $\\Xi$ \\(\\xi\\) $\\xi$ \\(O\\) $O$ \\(\\omicron\\) $\\omicron$ \\(\\Pi\\) $\\Pi$ \\(\\pi\\) $\\pi$ \\(P\\) $P$ \\(\\rho\\) $\\rho$ \\(\\Sigma\\) $\\Sigma$ \\(\\sigma\\) $\\sigma$ \\(T\\) $T$ \\(\\tau\\) $\\tua$ \\(\\Upsilon\\) $\\Upsilon$ \\(\\upsilon\\) $\\upsilon$ \\(\\Phi\\) $\\Phi$ \\(\\phi\\) $\\phi$ \\(X\\) $X$ \\(\\chi\\) $\\chi$ \\(\\Psi\\) $\\Psi$ \\(\\psi\\) $\\psi$ \\(\\Omega\\) $\\Omega$ \\(\\omega\\) $\\omega$ 2.14 视频 (Video)和音乐 (music) 原生markdown并不支持视频插入,需要使用HTML语法.一般需要视频网站支持.比如插入youtube视频,需要到youtube视频下方,点击分享按钮,然后点击Embed,会给出内嵌的HTML代码.复制到markdown即可. &lt;iframe width=&quot;100%&quot; height=&quot;400&quot; src=&quot;https://www.youtube.com/embed/GCmnvXXrpRk&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen&gt;&lt;/iframe&gt; 同理,对于音乐,也需要音乐来源网站支持.比如我们插入网易音乐: &lt;iframe frameborder=&quot;no&quot; border=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; width=330 height=86 src=&quot;//music.163.com/outchain/player?type=2&amp;id=85569&amp;auto=1&amp;height=66&quot;&gt;&lt;/iframe&gt; 2.15 Markdown编辑器 很多编辑器都支持markdown语法, 还有一些专门用于markdown的编辑器. Typora 官网如下: https://typora.io/ 感觉是现在最佳的markdown编辑器.实时渲染. 另外还可以导出为PDF等其他格式,非常全能. 网易云笔记 网易云笔记也支持markdown文件.并且能够在右侧实时显示渲染结果.也非常不错. Atom 是github官方出的文本编辑器,并不推荐使用. Rstudio 配合Rmarkdown使用非常好. Jupyter notebook Python数据分析的非常好的编辑器.跟typora一样,实时渲染,格式并不是markdown的,但是可以导出为markdown格式. "],
["rmarkdown.html", "Chapter 3 RMarkdown 3.1 安装 3.2 Rmarkdown结构 3.3 YAML 3.4 R代码块 3.5 代码块参数 (Chunk options) 3.6 全局代码块参数 3.7 具体问题的cookbook 3.8 Rmarkdown特有语法 3.9 输出格式 3.10 Blogdown 3.11 Bookdown 3.12 Presentation 3.13 Pagedown 3.14 Pkgdown", " Chapter 3 RMarkdown Rmarkdown是Rstudio公司出品的.所有markdown的语法都支持.但是加入了很多强大的功能,因此可以做更多原生markdown无法完成的任务.成为数据分析以及报告自动化和重复化领域一个非常常用的工具. 可以参考下面的书,是rmarkdown的作者Yihui Xie写的. https://bookdown.org/yihui/rmarkdown/installation.html 也可以查看这个视频简介. What is R Markdown? from RStudio, Inc. on Vimeo. 3.1 安装 需要安装R和Rstudio. install.packages(&#39;rmarkdown&#39;) 如果想要转换为PDF格式,需要安装LaTex. install.packages(&quot;tinytex&quot;) tinytex::install_tinytex() # install TinyTeX 3.2 Rmarkdown结构 Rmarkdown可以分为三部分,分别是YAML, 文本部分以及代码块. YAML YAML在每个rmakdown文件的最开头,定义了Markdown文件的很多性质.YAML是指YAin’t Markup Language, https://en.wikipedia.org/wiki/YAML. --- title: &quot;Hello R Markdown&quot; author: &quot;Awesome Me&quot; date: &quot;2018-02-14&quot; output: html_document --- YAML用---包围起来. 文本部分 YAML下面就是文本部分,其实也就是Markdown. 代码块 在Rmarkdown中,可以插入可以执行的代码块,不近包括R,还包括pyton,SQL等等. 上图显示的就是一个完整的Rmarkdown文件. 3.3 YAML 3.4 R代码块 R代码块的格式为: ```{r} library(tidyverse) library(ggplot2) ``` 可以看到,跟markdown代码块唯一的不同就是需要使用{r}来定义该代码块为R语言.除此之外,可以通过在大括号中设置一系列的参数,来控制代码块的输出.包括文本输出,图片输出以及表格输出等. 比如,可以通过设置result = 'hide'从而使文本结果不输出.也可以通过设置fig.width和fig.height来控制输出图片的宽度和高度. 另外还可以通过eval参数(evaulate)来控制代码块是否执行,如果设置为FALSE,则代码块不会执行. 比如: 下面这段代码就会执行,并输出结果. ```{r, eval = TRUE} library(ggplot2) ggplot(mtcars, aes(x = mpg, y = wt, color = gear)) + geom_point() + theme_bw() ``` library(ggplot2) ggplot(mtcars, aes(x = mpg, y = wt, color = gear)) + geom_point() + theme_bw() 而这段代码则不会执行 ```{r, eval = FALSE} library(ggplot2) ggplot(mtcars, aes(x = mpg, y = wt, color = gear)) + geom_point() + theme_bw() ``` library(ggplot2) ggplot(mtcars, aes(x = mpg, y = wt, color = gear)) + geom_point() + theme_bw() 3.5 代码块参数 (Chunk options) 代码块有非常多的参数(chunk options),常用的总结如下,完整的可以在yihui xie的博客中. https://yihui.org/knitr/options/ 3.5.1 代码是否执行 eval:设置为TRUE或者FALSE来控制代码块是否执行. ###文本输出结果 echo:设置为TRUE或者FALSE,控制代码块是否显示在最终的渲染结果中. results: markup:mark up the results using the output hook, e.g. put results in a special LaTeX environment. asis:将R原始结果输出到最终文本中. hide:隐藏R执行结果,但是对error,message和warning没有作用. collapse:设置为TRUE或者FALSE.用来控制文本输出结果是否和代码块混在一起. warning:设置为TRUE或者FALSE.如果代码执行,是否显示其中的warning信息. error:设置为TRUE或者FALSE.如果设置为TRUE,即使代码执行出现错误,仍然会输出渲染结果,如果设置为FALSE,代码执行错误,则渲染也会出错,不会在继续输出结果. ‘message’: 设置为TRUE或者FALSE.代码执行时是否输出message信息. include:是否将代码输出结果显示在最终的渲染输出文本中. 显示代码和输出结果: ```{r, eval = TRUE, include = TRUE} library(ggplot2) library(tidyverse) mtcars %&gt;% ggplot(aes(x = gear, cyl)) + geom_point() + theme_bw() ``` library(ggplot2) library(tidyverse) mtcars %&gt;% ggplot(aes(x = gear, cyl)) + geom_point() + theme_bw() 显示代码不显示输出结果: ```{r, eval = TRUE, include = FALSE} library(ggplot2) library(tidyverse) mtcars %&gt;% ggplot(aes(x = gear, cyl)) + geom_point() + theme_bw() ``` strip.white:设置为TRUE或者FALSE.是否输出在最终输出渲染结果中代码块上下的白线. ```{r, eval = FALSE, strip.white = TRUE} library(ggplot2) library(tidyverse) mtcars %&gt;% ggplot(aes(x = gear, cyl)) + geom_point() + theme_bw() ``` library(ggplot2) library(tidyverse) mtcars %&gt;% ggplot(aes(x = gear, cyl)) + geom_point() + theme_bw() ```{r, eval = FALSE, strip.white = FALSE} library(ggplot2) library(tidyverse) mtcars %&gt;% ggplot(aes(x = gear, cyl)) + geom_point() + theme_bw() ``` library(ggplot2) library(tidyverse) mtcars %&gt;% ggplot(aes(x = gear, cyl)) + geom_point() + theme_bw() 3.5.2 代码控制 (code decoration) tidy: TRUE:使用formatR对代码格式进行整理. FALSE:保持原格式. styler:使用styler包对代码格式进行整理. comment:默认为##,表示对于R代码输出的文本结果前面会有##进行注释. highlight:逻辑值.是否对代码进行高亮. ```{r, eval = FALSE, highlight = TRUE} library(ggplot2) library(tidyverse) mtcars %&gt;% ggplot(aes(x = gear, cyl)) + geom_point() + theme_bw() ``` library(ggplot2) library(tidyverse) mtcars %&gt;% ggplot(aes(x = gear, cyl)) + geom_point() + theme_bw() 3.5.3 缓冲 (cache) cache:逻辑值.是否需要缓冲代码块运行结果,对于代码运行时间比较长的rmakdown文件,可以设置为TRUE,这样重新渲染的时候,会减少运行时间. cache.path:默认为’cache/’,设置如果缓冲为TRUE时,缓冲结果存储的文件夹位置. 3.5.4 图像控制(plot) fig.path:默认为’figure/’,用来设置生成figure的存储位置. fig.show:如何显示plot. asis: plot在产生他们的代码后面. hold:所有代码产生的图片都放在一个完整的代码块之后. animate: 将所有产生的图片合成一个动画图片. hide:产生所有图片,但是并不展示. ```{r, eval = TRUE, fig.show = &#39;asis&#39;} library(ggplot2) library(tidyverse) library(ggsci) #plot1 mtcars %&gt;% ggplot(aes(x = mpg, y = disp, color = as.character(gear))) + geom_point() + ggsci::scale_color_aaas() + theme_bw() #plot2 mtcars %&gt;% ggplot(aes(x = mpg, y = disp, color = as.character(gear))) + geom_point() + ggsci::scale_color_ucscgb() + theme_bw() #plot3 mtcars %&gt;% ggplot(aes(x = mpg, y = disp, color = as.character(gear))) + geom_point() + ggsci::scale_color_igv() + theme_bw() ``` library(ggplot2) library(tidyverse) library(ggsci) #plot1 mtcars %&gt;% ggplot(aes(x = mpg, y = disp, color = as.character(gear))) + geom_point() + ggsci::scale_color_aaas() + theme_bw() #plot2 mtcars %&gt;% ggplot(aes(x = mpg, y = disp, color = as.character(gear))) + geom_point() + ggsci::scale_color_ucscgb() + theme_bw() #plot3 mtcars %&gt;% ggplot(aes(x = mpg, y = disp, color = as.character(gear))) + geom_point() + ggsci::scale_color_igv() + theme_bw() ```{r, eval = TRUE, fig.show = &#39;hold&#39;} library(ggplot2) library(tidyverse) library(ggsci) #plot1 mtcars %&gt;% ggplot(aes(x = mpg, y = disp, color = as.character(gear))) + geom_point() + ggsci::scale_color_aaas() + theme_bw() #plot2 mtcars %&gt;% ggplot(aes(x = mpg, y = disp, color = as.character(gear))) + geom_point() + ggsci::scale_color_ucscgb() + theme_bw() #plot3 mtcars %&gt;% ggplot(aes(x = mpg, y = disp, color = as.character(gear))) + geom_point() + ggsci::scale_color_igv() + theme_bw() ``` library(ggplot2) library(tidyverse) library(ggsci) #plot1 mtcars %&gt;% ggplot(aes(x = mpg, y = disp, color = as.character(gear))) + geom_point() + ggsci::scale_color_aaas() + theme_bw() #plot2 mtcars %&gt;% ggplot(aes(x = mpg, y = disp, color = as.character(gear))) + geom_point() + ggsci::scale_color_ucscgb() + theme_bw() #plot3 mtcars %&gt;% ggplot(aes(x = mpg, y = disp, color = as.character(gear))) + geom_point() + ggsci::scale_color_igv() + theme_bw() ```{r, eval = TRUE, fig.show = &#39;animate&#39;} library(ggplot2) library(tidyverse) library(ggsci) #plot1 mtcars %&gt;% ggplot(aes(x = mpg, y = disp, color = as.character(gear))) + geom_point() + ggsci::scale_color_aaas() + theme_bw() #plot2 mtcars %&gt;% ggplot(aes(x = mpg, y = disp, color = as.character(gear))) + geom_point() + ggsci::scale_color_ucscgb() + theme_bw() #plot3 mtcars %&gt;% ggplot(aes(x = mpg, y = disp, color = as.character(gear))) + geom_point() + ggsci::scale_color_igv() + theme_bw() ``` library(ggplot2) library(tidyverse) library(ggsci) #plot1 mtcars %&gt;% ggplot(aes(x = mpg, y = disp, color = as.character(gear))) + geom_point() + ggsci::scale_color_aaas() + theme_bw() #plot2 mtcars %&gt;% ggplot(aes(x = mpg, y = disp, color = as.character(gear))) + geom_point() + ggsci::scale_color_ucscgb() + theme_bw() #plot3 mtcars %&gt;% ggplot(aes(x = mpg, y = disp, color = as.character(gear))) + geom_point() + ggsci::scale_color_igv() + theme_bw() dpi:输出图片dpi,默认72.(dpi * inches = pixels) fig.width和fig.height:输出图片宽度和高度,默认为7(单位英寸). fig.asp:图片的高宽比.默认为NULL.如果设置为数值,比如设置为0.7.则fig.height会被覆盖,然后设置为fig.width*fig.asp. out.width和out.height:默认为NULL.可以设置为100%,这样在最终的渲染结果中就是和页面宽度一致. fig.align:图片的align位置.默认为left,可以为right或者center. fig.cap:图片标题.设置为NA或者NULL,则没有. fig.subcap:图片副标题. 3.6 全局代码块参数 如果某些代码块参数在全局中都是一样的,可以在全局进行设置. 在YAML下以及所有的markdown文本之上,插入下列代码块. ```{r, include = FALSE} knitr::opts_chunk$set(fig.width = 8, collapse = TRUE) ``` 使用的是knitr包中的opts_chunk$set()函数.可以将比较常见常用的代码块设置在这里进行设置.这里就是全局的设置. 3.7 具体问题的cookbook 输出两幅图,并且并列排布 结合代码块参数fig.show(设置为hold)和out.width(设置为50%). ```{r, eval = TRUE, fig.show = &#39;hold&#39;, out.width = &#39;50%&#39;} library(ggplot2) library(tidyverse) library(ggsci) #plot1 mtcars %&gt;% ggplot(aes(x = mpg, y = disp, color = as.character(gear))) + geom_point() + ggsci::scale_color_aaas() + theme_bw() #plot2 mtcars %&gt;% ggplot(aes(x = mpg, y = disp, color = as.character(gear))) + geom_point() + ggsci::scale_color_ucscgb() + theme_bw() ``` 3.8 Rmarkdown特有语法 Rmarkdown相比markdown来说,因为可以直接运行代码,因此有一些特有的语法,比如插入图片等. 3.8.1 图片 (image) 使用knitr::include_graphics()函数可以直接插入图片,然后使用代码块参数可以对图片进行设置,宽度高度,对齐等等. ```{r, eval = TRUE, fig.show = &#39;hold&#39;, out.width = &#39;50%&#39;, fig.align = &#39;center&#39;, fig.cap = &quot;小涛&quot;} knitr::include_graphics(&#39;images/Screen Shot 2020-03-13 at 10.48.36 PM.png&#39;) ``` Figure 3.1: 小涛 3.8.2 表格 (Table) knitr::ktable()函数 ```{r, eval = TRUE} knitr::kable(iris[1:5, ], caption = &#39;A caption&#39;) ``` Table 3.1: A caption Sepal.Length Sepal.Width Petal.Length Petal.Width Species 5.1 3.5 1.4 0.2 setosa 4.9 3.0 1.4 0.2 setosa 4.7 3.2 1.3 0.2 setosa 4.6 3.1 1.5 0.2 setosa 5.0 3.6 1.4 0.2 setosa 该函数又很多参数可以用来控制输出表格的格式,具体的可以参考帮助文档.也可以参考下面的帖子: https://cran.r-project.org/web/packages/kableExtra/vignettes/awesome_table_in_html.html 3.8.3 地图 (map) 使用leaflet包可以插入地图. ```{r out.width=&#39;100%&#39;, echo=FALSE} library(leaflet) leaflet() %&gt;% addTiles() %&gt;% setView(-93.65, 42.0285, zoom = 17) %&gt;% addPopups( -93.65, 42.0285, &#39;Here is the &lt;b&gt;Department of Statistics&lt;/b&gt;, ISU&#39; ) ``` 3.9 输出格式 3.10 Blogdown 3.11 Bookdown 3.12 Presentation 3.13 Pagedown 3.14 Pkgdown "],
["git.html", "Chapter 4 Git和github 4.1 Git配制 4.2 Git基本操作", " Chapter 4 Git和github Here is a review of existing methods. 4.1 Git配制 设置的主要命令是git config: git config --global user.name &quot;your name&quot; git config --global user.email &quot;your email&quot; 其中,--global是指全局配置,如果不写(或者写为local),则只为当前仓库(repository)配置. 如果有多个git用户,这时候需要先确定某个仓库使用的哪个账户. git config user.name git config user.email 查询全局的git账户信息: git config --global user.name git config --global user.email 如果想要去掉全局用户和邮箱设置. git config --global --unset user_name git config --global --unset user_email 4.2 Git基本操作 4.2.1 创建本地git仓库(reop) 使用git init命令 首先,创建一个你要当作仓库的文件夹,然后将其设置为工作路径,然后执行. mkdir git_test cd git_test git init 这时候查看目录结构,就可以看到创建了一个名为.git的子目录,这就说明创建版本库成功了. 4.2.2 将文件添加到版本库 要将一个文件纳入到版本管理,首先需要将其添加到暂存区,然后才能提交到仓库中. 使用git add命令将文件添加到暂存区: 比如我们首先新建一个名为README.md的文件,然后将其添加到暂存区. git add README.md 当然也可以使用下面命令将所有修改添加到暂存区: git add . . 是正则表达式,代表任意文件.但是空文件夹是不会添加到暂存区的. 使用git commit命令将暂存区文件提交到仓库中. git commit #如果暂存区有文件,则将其中的文件提交到仓库 git commit -m &quot;your note for this commit&quot; #用于注明提交的内容,变更等信息,方便溯源 如果直接使用git commit提交,不带注释信息,则会先弹出评论界面,需要评论. 注意这时候是使用vi打开的文件,所以需要掌握一点vi的基础知识.参考下面帖子: https://www.cnblogs.com/itech/archive/2009/04/17/1438439.html 简单来说,首先在命令行模式下按下字母i进入插入模式,在该模式下进行信息的输入.输入结束之后,点击ESC退回到命令行模式,然后再输入冒号(:).输入w,回车,保存,然后输入q,回车,退出vi编辑器. "],
["ggplot2.html", "Chapter 5 ggplot2学习总结", " Chapter 5 ggplot2学习总结 We describe our methods in this chapter. "],
["network.html", "Chapter 6 Network分析总结 6.1 Example one 6.2 Example two", " Chapter 6 Network分析总结 Some significant applications are demonstrated in this chapter. 6.1 Example one 6.2 Example two "],
["multiomics.html", "Chapter 7 多组学分析", " Chapter 7 多组学分析 We have finished a nice book. "],
["tidyverse.html", "Chapter 8 Tidyverse用于数据分析", " Chapter 8 Tidyverse用于数据分析 You can label chapter and section titles using {#label} after them, e.g., we can reference Chapter 3. If you do not manually label them, there will be automatic labels anyway, e.g., Chapter 3. "],
["references.html", "References", " References "]
]
